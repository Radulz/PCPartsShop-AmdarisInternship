// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PCPartsShop.Infrastructure;

namespace PCPartsShop.Infrastructure.Migrations
{
    [DbContext(typeof(PCPartsShopContext))]
    [Migration("20211222124556_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PCPartsShop_WebAPI.Models.Component", b =>
                {
                    b.Property<Guid>("ComponentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Make")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("ComponentId");

                    b.ToTable("Components");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Component");
                });

            modelBuilder.Entity("PCPartsShop_WebAPI.Models.CPU", b =>
                {
                    b.HasBaseType("PCPartsShop_WebAPI.Models.Component");

                    b.Property<int>("Cores")
                        .HasColumnType("int");

                    b.Property<double>("Freq")
                        .HasColumnType("float");

                    b.Property<int>("MFreq")
                        .HasColumnType("int");

                    b.Property<string>("Socket")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TDP")
                        .HasColumnType("int");

                    b.Property<int>("Tech")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("CPU");
                });

            modelBuilder.Entity("PCPartsShop_WebAPI.Models.GPU", b =>
                {
                    b.HasBaseType("PCPartsShop_WebAPI.Models.Component");

                    b.Property<int>("Freq")
                        .HasColumnType("int")
                        .HasColumnName("GPU_Freq");

                    b.Property<int>("Length")
                        .HasColumnType("int");

                    b.Property<int>("Memory")
                        .HasColumnType("int");

                    b.Property<string>("MemoryType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PowerC")
                        .HasColumnType("int");

                    b.Property<int>("Tech")
                        .HasColumnType("int")
                        .HasColumnName("GPU_Tech");

                    b.HasDiscriminator().HasValue("GPU");
                });

            modelBuilder.Entity("PCPartsShop_WebAPI.Models.MOBO", b =>
                {
                    b.HasBaseType("PCPartsShop_WebAPI.Models.Component");

                    b.Property<string>("Chipset")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Format")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MemoryFreqInf")
                        .HasColumnType("int");

                    b.Property<int>("MemoryFreqSup")
                        .HasColumnType("int");

                    b.Property<string>("MemoryType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MOBO_MemoryType");

                    b.Property<string>("Socket")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MOBO_Socket");

                    b.HasDiscriminator().HasValue("MOBO");
                });

            modelBuilder.Entity("PCPartsShop_WebAPI.Models.PSU", b =>
                {
                    b.HasBaseType("PCPartsShop_WebAPI.Models.Component");

                    b.Property<int>("Power")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("PSU");
                });

            modelBuilder.Entity("PCPartsShop_WebAPI.Models.RAM", b =>
                {
                    b.HasBaseType("PCPartsShop_WebAPI.Models.Component");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<int>("Freq")
                        .HasColumnType("int")
                        .HasColumnName("RAM_Freq");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("RAM_Type");

                    b.Property<double>("Voltage")
                        .HasColumnType("float");

                    b.HasDiscriminator().HasValue("RAM");
                });
#pragma warning restore 612, 618
        }
    }
}
